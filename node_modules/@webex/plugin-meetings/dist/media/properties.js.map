{"version":3,"sources":["properties.js"],"names":["MediaProperties","options","namespace","MEETINGS","peerConnection","MediaUtil","createPeerConnection","mediaDirection","videoTrack","audioTrack","shareTrack","remoteShare","remoteAudioTrack","remoteVideoTrack","localQualityLevel","QUALITY_LEVELS","HIGH","remoteQualityLevel","mediaSettings","videoDeviceId","Object","defineProperty","set","stream","audio","getAudioTracks","video","getVideoTracks","length","get","LoggerProxy","logger","warn","createMediaStream","type","values","remoteStream","deviceId","unsetRemoteMedia","unsetLocalVideoTrack","unsetLocalShareTrack","unsetRemoteStream","unsetRemoteShare"],"mappings":"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","file":"properties.js","sourcesContent":["import {\n  MEETINGS,\n  QUALITY_LEVELS\n} from '../constants';\nimport LoggerProxy from '../common/logs/logger-proxy';\n\nimport MediaUtil from './util';\n\n/**\n * @class MediaProperties\n */\nexport default class MediaProperties {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} [options] -- to auto construct\n   * @returns {MediaProperties}\n   */\n  constructor(options = {}) {\n    this.peerConnection = MediaUtil.createPeerConnection();\n    this.mediaDirection = options.mediaDirection;\n    this.videoTrack = options.videoTrack;\n    this.audioTrack = options.audioTrack;\n    this.shareTrack = options.shareTrack;\n    this.remoteShare = options.remoteShare;\n    this.remoteAudioTrack = options.remoteAudioTrack;\n    this.remoteVideoTrack = options.remoteVideoTrack;\n    this.localQualityLevel = options.localQualityLevel || QUALITY_LEVELS.HIGH;\n    this.remoteQualityLevel = options.remoteQualityLevel || QUALITY_LEVELS.HIGH;\n    this.mediaSettings = {};\n    this.videoDeviceId = null;\n\n    // deprecated after v1.89.3, remove when feasible.\n    // backwards compatible code.\n    Object.defineProperty(this, 'remoteStream', {\n      set: (stream) => {\n        const audio = stream.getAudioTracks();\n        const video = stream.getVideoTracks();\n\n        this.remoteAudioTrack = audio.length && audio[0];\n        this.remoteVideoTrack = video.length && video[0];\n      },\n      get: () => {\n        LoggerProxy.logger.warn('Media:properties#remoteStream --> [DEPRECATION WARNING]: remoteStream (getter) has been deprecated after v1.89.3 (use remoteAudioTrack, remoteVideoTrack instead)');\n\n        // return if set or create a stream for backwards compatibility\n        return MediaUtil.createMediaStream([this.remoteAudioTrack, this.remoteVideoTrack]);\n      }\n    });\n  }\n\n  /**\n   * Retrieves the preferred video input device\n   * @returns {Object|null}\n   */\n  getVideoDeviceId() {\n    return this.videoDeviceId || null;\n  }\n\n  setMediaDirection(mediaDirection) {\n    this.mediaDirection = mediaDirection;\n  }\n\n  setMediaSettings(type, values) {\n    this.mediaSettings[type] = values;\n  }\n\n  setMediaPeerConnection(peerConnection) {\n    this.peerConnection = peerConnection;\n  }\n\n  setLocalVideoTrack(videoTrack) {\n    this.videoTrack = videoTrack;\n  }\n\n  setLocalAudioTrack(audioTrack) {\n    this.audioTrack = audioTrack;\n  }\n\n  setLocalQualityLevel(localQualityLevel) {\n    this.localQualityLevel = localQualityLevel;\n  }\n\n  setLocalShareTrack(shareTrack) {\n    this.shareTrack = shareTrack;\n  }\n\n  setRemoteQualityLevel(remoteQualityLevel) {\n    this.remoteQualityLevel = remoteQualityLevel;\n  }\n\n  /**\n   * @deprecated after v1.89.3\n   * @param {remoteStream} remoteStream Sets remote media stream\n   * @returns {null}\n   * Use setRemoteAudioTrack, setRemoteVideoTrack\n   * and setRemoteShareTrack.\n   */\n  setRemoteStream(remoteStream) {\n    LoggerProxy.logger.warn('Media:properties#setRemoteStream --> [DEPRECATION WARNING]: setRemoteStream has been deprecated after v1.89.3 (use setRemoteAudioTrack, setRemoteVideoTrack instead)');\n    // calls setter\n    this.remoteStream = remoteStream;\n  }\n\n  setRemoteShare(remoteShare) {\n    this.remoteShare = remoteShare;\n  }\n\n  /**\n   * Sets the remote audio track\n   * @param {MediaTrack} remoteAudioTrack MediaTrack to save\n   * @returns {void}\n   */\n  setRemoteAudioTrack(remoteAudioTrack) {\n    this.remoteAudioTrack = remoteAudioTrack;\n  }\n\n  /**\n   * Sets the remote video track\n   * @param {MediaTrack} remoteVideoTrack MediaTrack to save\n   * @returns {void}\n   */\n  setRemoteVideoTrack(remoteVideoTrack) {\n    this.remoteVideoTrack = remoteVideoTrack;\n  }\n\n  /**\n   * Stores the preferred video input device\n   * @param {string} deviceId Preferred video input device\n   * @returns {void}\n   */\n  setVideoDeviceId(deviceId) {\n    this.videoDeviceId = deviceId;\n  }\n\n  unsetPeerConnection() {\n    this.peerConnection = null;\n  }\n\n  reInitiatePeerconnection() {\n    this.peerConnection = MediaUtil.createPeerConnection();\n  }\n\n  unsetLocalVideoTrack() {\n    this.videoTrack = null;\n  }\n\n  unsetLocalShareTrack() {\n    this.shareTrack = null;\n  }\n\n  unsetLocalAudioTrack() {\n    this.audioTrack = null;\n  }\n\n  /**\n   * Removes remote stream from class instance\n   * @deprecated after v1.89.3\n   * @returns {void}\n   */\n  unsetRemoteStream() {\n    LoggerProxy.logger.warn('Media:properties#unsetRemoteStream --> [DEPRECATION WARNING]: unsetRemoteStream has been deprecated after v1.89.3 (use unsetRemoteTracks instead)');\n    // unsets audio and video only\n    this.unsetRemoteMedia();\n  }\n\n  /**\n   * Removes both remote audio and video from class instance\n   * @returns {void}\n   */\n  unsetRemoteMedia() {\n    this.remoteAudioTrack = null;\n    this.remoteVideoTrack = null;\n  }\n\n  unsetRemoteShare() {\n    this.remoteShare = null;\n  }\n\n  unsetLocalVideoTracks() {\n    this.unsetLocalVideoTrack();\n    this.unsetLocalShareTrack();\n  }\n\n  /**\n   * Removes remote stream and remote share from class instance\n   * @deprecated after v1.89.3\n   * @returns {void}\n   */\n  unsetRemoteStreams() {\n    LoggerProxy.logger.warn('Media:properties#unsetRemoteStreams --> [DEPRECATION WARNING]: unsetRemoteStreams has been deprecated after v1.89.3 (use unsetRemoteTracks instead)');\n    this.unsetRemoteStream();\n    this.unsetRemoteShare();\n  }\n\n  /**\n   * Unsets all remote tracks\n   * @returns {void}\n   */\n  unsetRemoteTracks() {\n    this.unsetRemoteMedia();\n    this.unsetRemoteShare();\n  }\n\n  unsetShareStreams() {\n    this.unsetLocalShareTrack();\n    this.unsetRemoteShare();\n  }\n\n  /**\n   * Removes both local and remote video stream from class instance\n   * @deprecated after v1.89.3\n   * @returns {void}\n   */\n  unsetMediaStreams() {\n    LoggerProxy.logger.warn('Media:properties#unsetMediaStreams --> [DEPRECATION WARNING]: unsetMediaStreams has been deprecated after v1.89.3 (use unsetMediaTracks instead)');\n    this.unsetLocalVideoTrack();\n    this.unsetRemoteStream();\n  }\n\n  /**\n   * Removes both local and remote video stream from class instance\n   * @returns {void}\n   */\n  unsetMediaTracks() {\n    this.unsetLocalVideoTrack();\n    this.unsetRemoteMedia();\n  }\n}\n"]}