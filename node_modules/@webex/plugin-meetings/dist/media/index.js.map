{"version":3,"sources":["index.js"],"names":["Media","setLocalTrack","enabled","track","reconnectMedia","peerConnection","meetingId","remoteQualityLevel","connectionState","PEER_CONNECTION_STATE","CLOSED","FAILED","reject","ReconnectionError","PeerConnectionManager","createOffer","generateLocalMedias","mediaId","audioMuted","videoMuted","localSdp","getLocalMedia","options","config","sendAudio","sendVideo","sendShare","sharePreferences","isSharing","getMedia","getDisplayMedia","resolve","undefined","checkTracks","trackType","receiveTracks","getDirection","sendTracks","direction","attachMedia","mediaProperties","mediaDirection","audioTrack","videoTrack","shareTrack","result","receiveAudio","audioTransceiver","addTransceiver","receiveVideo","videoTransceiver","receiveShare","shareTransceiver","onnegotiationneeded","event","LoggerProxy","logger","info","updateMedia","setTrackOnTransceiver","type","sendTrack","receiveTrack","transceiver","sender","replaceTrack","e","error","updateTransceiver","customResolution","screenResolution","customShareFrameRate","screenFrameRate","hasSharePreferences","hasCustomConstraints","shareConstraints","hasHighFrameRate","highFrameRate","Config","meetings","resolution","videoShareFrameRate","aspectRatio","cursor","MEDIA_TRACK_CONSTRAINT","CURSOR","AWLAYS","frameRate","height","idealHeight","width","idealWidth","bowser","name","toLowerCase","mediaConfig","audio","video","navigator","mediaDevices","then","stream","getVideoTracks","length","applyConstraints","getDisplayMediaParams","defaultWidth","ideal","max","maxWidth","defaultHeight","maxHeight","firefox","deviceId","fake","process","env","NODE_ENV","getUserMedia","catch","err","logPath","constraint","getSupportedDevice","enumerateDevices","devices","supported","filter","device","kind","AUDIO_INPUT","VIDEO_INPUT","getDevices","MediaError","toggleStream","stopTracks","stop","readyState","stopStream","warn","getTracks","forEach","mediaSetting","audioVideo","localStream","shareStream"],"mappings":"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","file":"index.js","sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n/* globals navigator */\nimport bowser from 'bowser';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  AUDIO_INPUT,\n  VIDEO_INPUT,\n  PEER_CONNECTION_STATE,\n  MEDIA_TRACK_CONSTRAINT\n} from '../constants';\nimport Config from '../config';\nimport PeerConnectionManager from '../peer-connection-manager';\nimport ReconnectionError from '../common/errors/reconnection';\nimport MediaError from '../common/errors/media';\n\n/**\n * MediaDirection\n * @typedef {Object} MediaDirection\n * @property {boolean} sendAudio\n * @property {boolean} receiveAudio\n * @property {boolean} sendVideo\n * @property {boolean} receiveVideo\n * @property {boolean} sendShare\n * @property {boolean} receiveShare\n */\n\n/**\n * SendOptions\n * @typedef {Object} SendOptions\n * @property sendAudio\n * @property sendVideo\n * @property sendShare\n * @property isSharing\n * @property {Object} sharePreferences\n */\n/**\n *\n * @public\n * @export\n * Mimic browser APIs as \"the ultimate browser\".\n * Handles the quirks of each browser.\n * Extends and enhances adapter.js, i.e., the \"media\" file from the web client.\n */\nconst Media = {};\n\n/**\n * @param {boolean} enabled\n * @param {MediaStreamTrack} track\n * @returns {Boolean}\n * @public\n */\nMedia.setLocalTrack = (enabled, track) => {\n  if (track) {\n    track.enabled = !enabled;\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {RTCPeerConnection} peerConnection\n * @param {Object} meetingProperties\n * @param {string} meetingProperties.meetingId\n * @param {string} meetingProperties.remoteQualityLevel LOW|MEDIUM|HIGH\n * @returns {Promise}\n */\nMedia.reconnectMedia = (peerConnection, {meetingId, remoteQualityLevel}) => {\n  if (peerConnection.connectionState === PEER_CONNECTION_STATE.CLOSED ||\n    peerConnection.connectionState === PEER_CONNECTION_STATE.FAILED) {\n    return Promise.reject(new ReconnectionError('Reinitiate peerconnection'));\n  }\n\n  return PeerConnectionManager.createOffer(peerConnection, {meetingId, remoteQualityLevel});\n};\n\n/**\n * format the media array for send\n * @param {String} mediaId\n * @param {Boolean} audioMuted\n * @param {Boolean} videoMuted\n * @returns {Array} medias\n */\nMedia.generateLocalMedias = (mediaId, audioMuted, videoMuted) => {\n  if (mediaId) {\n    return [\n      {\n        localSdp: JSON.stringify({\n          audioMuted,\n          videoMuted\n        }),\n        mediaId\n      }\n    ];\n  }\n\n  return [];\n};\n\n/**\n * make a browser call to get the media\n * @param {SendOptions} options\n * @param {Object} config SDK Configuration for meetings plugin\n * @returns {Promise}\n */\nMedia.getLocalMedia = (options, config) => {\n  const {\n    sendAudio, sendVideo, sendShare, sharePreferences, isSharing\n  } = options;\n\n  if (sendAudio || sendVideo) {\n    return Media.getMedia(sendAudio, sendVideo, config);\n  }\n\n  if (sendShare && !isSharing) {\n    return Media.getDisplayMedia(\n      {\n        sendAudio: false,\n        sendShare: true,\n        sharePreferences\n      },\n      config\n    );\n  }\n\n  return Promise.resolve(undefined);\n};\n/**\n * Returns the direction and tracks\n * @param {string} trackType type of track (audio/video)\n * @param {object}  track  tracks passed\n * @param {boolean} receiveTracks do you want to receive tracks from the remote side\n * @returns {Object} returns direction tracks to be added in transceiver\n */\nMedia.checkTracks = (trackType, track, receiveTracks) => {\n  const getDirection = (sendTracks, receiveTracks) => {\n    if (sendTracks && receiveTracks) {\n      return 'sendrecv';\n    } if (sendTracks && !receiveTracks) {\n      return 'sendonly';\n    } if (!sendTracks && receiveTracks) {\n      return 'recvonly';\n    } if (sendTracks && receiveTracks) {\n      return 'inactive';\n    }\n\n    return 'inactive';\n  };\n\n  if (track) {\n    return {track, direction: getDirection(!!track, receiveTracks)};\n  }\n\n  return {track: trackType, direction: getDirection(!!track, receiveTracks)};\n};\n/**\n * creates peerconnection and attaches streams\n * @param {MediaDirection} mediaProperties\n * @param {Object} meetingProperties\n * @param {string} meetingProperties.meetingId\n * @param {string} meetingProperties.remoteQualityLevel LOW|MEDIUM|HIGH\n * @returns {Array} [peerConnection, ]\n */\nMedia.attachMedia = (mediaProperties, {meetingId, remoteQualityLevel}) => {\n  const {\n    mediaDirection, audioTrack, videoTrack, shareTrack, peerConnection\n  } = mediaProperties;\n\n  let result = null;\n\n  // Add Transceiver for audio\n  result = Media.checkTracks('audio', mediaDirection.sendAudio && audioTrack, mediaDirection.receiveAudio);\n  peerConnection.audioTransceiver = peerConnection.addTransceiver(result.track, {direction: result.direction});\n\n  // Add Transceiver for video\n  result = Media.checkTracks('video', mediaDirection.sendVideo && videoTrack, mediaDirection.receiveVideo);\n  peerConnection.videoTransceiver = peerConnection.addTransceiver(result.track, {direction: result.direction});\n\n  // Add Transceiver for share\n  result = Media.checkTracks('video', mediaDirection.sendShare && shareTrack, mediaDirection.receiveShare);\n  peerConnection.shareTransceiver = peerConnection.addTransceiver(result.track, {direction: result.direction});\n\n  peerConnection.onnegotiationneeded = (event) => {\n    LoggerProxy.logger.info(`Media:index#attachMedia --> onnegotiationneeded#PeerConnection: ${event}`);\n  };\n\n  return PeerConnectionManager.createOffer(peerConnection, {meetingId, remoteQualityLevel});\n};\n\n/**\n * updates all the media streams and creates a new media offer\n * @param {MediaDirection} mediaProperties\n * @param {Object} meetingProperties\n * @param {string} meetingProperties.meetingId\n * @param {string} meetingProperties.remoteQualityLevel LOW|MEDIUM|HIGH\n * @returns {Promise}\n */\nMedia.updateMedia = (mediaProperties, {meetingId, remoteQualityLevel}) => {\n  const {\n    mediaDirection, audioTrack, videoTrack, shareTrack, peerConnection\n  } = mediaProperties;\n\n  // update audio transceiver\n  Media.setTrackOnTransceiver(peerConnection.audioTransceiver, {\n    type: 'audio',\n    track: audioTrack,\n    sendTrack: mediaDirection.sendAudio && audioTrack,\n    receiveTrack: mediaDirection.receiveAudio\n  });\n\n  // update video transceiver\n  Media.setTrackOnTransceiver(peerConnection.videoTransceiver, {\n    type: 'video',\n    track: videoTrack,\n    sendTrack: mediaDirection.sendVideo && videoTrack,\n    receiveTrack: mediaDirection.receiveVideo\n  });\n\n  // update content transceiver\n  Media.setTrackOnTransceiver(peerConnection.shareTransceiver, {\n    type: 'video',\n    track: shareTrack,\n    sendTrack: mediaDirection.sendShare && shareTrack,\n    receiveTrack: mediaDirection.receiveShare\n  });\n  peerConnection.onnegotiationneeded = (event) => {\n    LoggerProxy.logger.info(`Media:index#updateMedia --> onnegotiationneeded#PeerConnection: ${event}`);\n  };\n\n  return PeerConnectionManager.createOffer(peerConnection, {meetingId, remoteQualityLevel});\n};\n\n/**\n * @param {RTCRtpTransceiver} transceiver\n * @param {Object} options\n * @param {MediaStreamTrack} options.track\n * @returns {undefined}\n */\nMedia.setTrackOnTransceiver = (transceiver, options) => {\n  const {\n    type, track, sendTrack, receiveTrack\n  } = options;\n\n  try {\n    const result = Media.checkTracks(type, sendTrack && track, receiveTrack);\n\n    transceiver.direction = result.direction;\n    if (options.track) {\n      transceiver.sender.replaceTrack(track);\n    }\n  }\n  catch (e) {\n    LoggerProxy.logger.error(`Media:index#setTrackOnTransceiver --> ${e}`);\n    throw e;\n  }\n};\n\n/**\n * creates a new offer\n * @param {Object} meetingProperties\n * @param {string} meetingProperties.meetingId\n * @param {string} meetingProperties.remoteQualityLevel LOW|MEDIUM|HIGH\n * @param {RTCPeerConnection} peerConnection\n * @param {RTCRtpTransceiver} transceiver\n * @param {Object} options see #Media.setTrackOnTransceiver\n * @returns {Promise}\n */\nMedia.updateTransceiver = ({meetingId, remoteQualityLevel}, peerConnection, transceiver, options) => {\n  Media.setTrackOnTransceiver(transceiver, options);\n\n  return PeerConnectionManager.createOffer(peerConnection, {meetingId, remoteQualityLevel});\n};\n\n/**\n * generates share streams\n * @param {Object} options parameter\n * @param {Boolean} options.sendAudio send audio from the display share\n * @param {Boolean} options.sendShare send video from the display share\n * @param {Object} options.sharePreferences\n * @param {MediaTrackConstraints} options.sharePreferences.shareConstraints constraints to apply to video\n *   @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints}\n * @param {Boolean} options.sharePreferences.highFrameRate if shareConstraints isn't provided, set default values based off of this boolean\n * @param {Object} config SDK Configuration for meetings plugin\n * @returns {Promise.<MediaStream>}\n */\nMedia.getDisplayMedia = (options, config = {}) => {\n  // SDK screen share resolution settings from Webex.init\n  const customResolution = config.screenResolution || {};\n  // user defined screen share frame rate\n  const customShareFrameRate = config.screenFrameRate || null;\n  // user defined share preferences\n  const hasSharePreferences = options.sharePreferences;\n  const hasCustomConstraints = hasSharePreferences && hasSharePreferences.shareConstraints;\n  const hasHighFrameRate = hasSharePreferences && hasSharePreferences.highFrameRate;\n  const {\n    screenResolution,\n    resolution,\n    videoShareFrameRate,\n    screenFrameRate,\n    aspectRatio\n  } = Config.meetings;\n\n  let shareConstraints = {\n    cursor: MEDIA_TRACK_CONSTRAINT.CURSOR.AWLAYS,\n    aspectRatio\n  };\n\n  if (hasCustomConstraints) {\n    shareConstraints = hasSharePreferences.shareConstraints;\n  }\n  else if (hasHighFrameRate) {\n    shareConstraints = {\n      ...shareConstraints,\n      frameRate: videoShareFrameRate,\n      height: resolution.idealHeight,\n      width: resolution.idealWidth,\n      ...config.resolution\n    };\n  }\n  else {\n    shareConstraints = {\n      ...shareConstraints,\n      frameRate: customShareFrameRate || screenFrameRate,\n      height: customResolution.idealHeight || screenResolution.idealHeight,\n      width: customResolution.idealWidth || screenResolution.idealWidth,\n      ...config.screenResolution\n    };\n  }\n\n  // chrome and webkit based browsers (edge, safari) automatically adjust everything\n  // and we have noticed higher quality with those browser types\n  // firefox specifically has some issues with resolution and frame rate decision making\n  // so we are making it optional and configurable (with defaults) for firefox\n  // to have higher quality, and for developers to control the values\n  // eventually we may have to add the same functionality to chrome, OR conversely, get to with firefox\n\n\n  if (bowser.name.toLowerCase() === 'firefox') {\n    const mediaConfig = {\n      audio: options.sendAudio,\n      video: options.sendShare\n    };\n\n\n    return navigator.mediaDevices.getDisplayMedia({audio: options.sendAudio, video: mediaConfig})\n      .then((stream) => {\n        if (options.sendShare && stream.getVideoTracks().length > 0) {\n          // Firefox has a bug with the spec where changing in the height and width only happens\n          // after we get the inital tracks\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1321221\n          stream.getVideoTracks()[0].applyConstraints(shareConstraints);\n        }\n\n\n        return stream;\n      });\n  }\n\n  const getDisplayMediaParams = {video: options.sendShare ? shareConstraints : false};\n\n  // safari doesn't support sending screen share audio\n  // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia\n  if (options.sendAudio && bowser.name.toLowerCase() !== 'safari') {\n    getDisplayMediaParams.audio = options.sendAudio;\n  }\n\n  return navigator.mediaDevices.getDisplayMedia(getDisplayMediaParams);\n};\n\n/**\n * generates audio and video using constraints (often called after getSupportedDevices)\n * @param {Object|Boolean} audio gum constraints\n * @param {Object|Boolean} video gum constraints\n * @param {Object} config SDK Configuration for meetings plugin\n * @returns {Object} {streams}\n */\nMedia.getMedia = (audio, video, config) => {\n  const defaultWidth = {ideal: config.resolution.idealWidth, max: config.resolution.maxWidth};\n  const defaultHeight = {ideal: config.resolution.idealHeight, max: config.resolution.maxHeight};\n  const mediaConfig = {\n    audio,\n    // TODO: Remove temporary workaround once Firefox fixes low constraint issues\n    // eslint-disable-next-line no-nested-ternary\n    video: video ?\n      bowser.firefox && video.width && video.width.max === 320 ?\n        {\n          deviceId: video.deviceId ? video.deviceId : undefined,\n          width: 320,\n          height: 180\n        } :\n        {\n          deviceId: video.deviceId ? video.deviceId : undefined,\n          width: video.width ? video.width : defaultWidth,\n          height: video.height ? video.height : defaultHeight\n        } :\n      false,\n    fake: process.env.NODE_ENV === 'test' // Special case to get fake media for Firefox browser for testing\n  };\n\n  return navigator.mediaDevices\n    .getUserMedia(mediaConfig)\n    .catch((err) => {\n      const logPath = 'Media:index#getMedia --> navigator.mediaDevices.getUserMedia';\n\n      LoggerProxy.logger.error(`${logPath} failed - ${err} (${err.constraint})`);\n      throw err;\n    });\n};\n\n/**\n * Checks if the machine has at least one audio or video device (Dont use this for screen share)\n * @param {object} [options]\n * {\n *    sendAudio: true/false,\n *    sendVideo: true/false\n * }\n * @returns {Object} {\n *    sendAudio: true/false,\n *    sendVideo: true/false\n *}\n */\nMedia.getSupportedDevice = ({sendAudio, sendVideo}) =>\n  Promise.resolve().then(() => {\n    if (!navigator.mediaDevices || navigator.mediaDevices.enumerateDevices === undefined) {\n      return {\n        sendAudio: true,\n        sendVideo: true\n      };\n    }\n\n    return navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const supported = {\n        audio: devices.filter((device) => device.kind === AUDIO_INPUT).length > 0,\n        video: devices.filter((device) => device.kind === VIDEO_INPUT).length > 0\n      };\n\n      return {\n        sendAudio: (supported.audio && sendAudio) || true,\n        sendVideo: (supported.video && sendVideo) || true\n      };\n    });\n  });\n\n/**\n * proxy to browser navigator.mediaDevices.enumerateDevices()\n * @returns {Promise}\n */\nMedia.getDevices = () => {\n  if (navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    return navigator.mediaDevices.enumerateDevices();\n  }\n\n  return Promise.reject(new MediaError('enumerateDevices not supported.'));\n};\n\n/**\n *\n * Toggle a specific stream\n * noop as of now, does nothing\n * @returns {null}\n */\nMedia.toggleStream = () => {};\n\n/**\n * Stop input stream\n * @param {MediaTrack} track A media stream\n * @returns {null}\n */\nMedia.stopTracks = (track) => {\n  if (!track) {\n    return Promise.resolve();\n  }\n\n  return Promise.resolve().then(() => {\n    if (track && track.stop) {\n      try {\n        track.stop();\n      }\n      catch (e) {\n        LoggerProxy.logger.error(`Media:index#stopTracks --> Unable to stop the track with state ${track.readyState}, error: ${e}`);\n      }\n    }\n  });\n};\n\n/**\n *\n * Stop input stream\n * @param {Stream} stream A media stream\n * @returns {null}\n * @deprecated after v1.89.3\n */\nMedia.stopStream = (stream) => {\n  LoggerProxy.logger.warn('Media:index#stopStream --> [DEPRECATION WARNING]: stopStream has been deprecated after v1.89.3');\n  if (!stream) {\n    return Promise.resolve();\n  }\n\n  /*\n   * To release local media\n   * 1) Chrome requires all tracks to be stopped (stream.stop got deprecated)\n   * 2) Firefox requires the stream to be stopped\n   */\n  return Promise.resolve().then(() => {\n    if (stream.getTracks) {\n      stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n    }\n    else if (stream.stop) {\n      stream.stop();\n    }\n  });\n};\n\n/**\n * generates streams for audio video and share\n * @param {object} mediaSetting parameter\n * @param {Object} mediaSetting.sendAudio sendAudio: {Boolean} sendAudio constraints\n * @param {Object} mediaSetting.sendVideo sendVideo: {Boolean} sendVideo constraints\n * @param {Object} mediaSetting.sendShare sendShare: {Boolean} sendShare constraints\n * @param {Object} mediaSetting.isSharing isSharing: {Boolean} isSharing constraints\n * @param {Object} audioVideo parameter\n * @param {Object} audioVideo.audio {deviceId: {String}}\n * @param {Object} audioVideo.video {deviceId: {String}}\n * @param {Object} sharePreferences parameter\n * @param {Object} sharePreferences.shareConstraints parameter\n * @param {Boolean} sharePreferences.highFrameRate parameter\n * @param {Object} config SDK Config\n * @returns {Array} [localStream, shareStream]\n */\nMedia.getUserMedia = (mediaSetting, audioVideo, sharePreferences, config) => Media.getLocalMedia({\n  sendAudio: mediaSetting.sendAudio ? audioVideo.audio || mediaSetting.sendAudio : false,\n  sendVideo: mediaSetting.sendVideo ? audioVideo.video || mediaSetting.sendVideo : false\n}, config).then((localStream) => Media.getLocalMedia({\n  sendShare: mediaSetting.sendShare,\n  isSharing: mediaSetting.isSharing,\n  sharePreferences\n}, config).then((shareStream) => [localStream, shareStream]));\n\nexport default Media;\n"]}